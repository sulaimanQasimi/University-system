<?php

namespace App\Http\Livewire\Student;

use App\Models\Student;
use Mediconesystems\LivewireDatatables\Column;
use Mediconesystems\LivewireDatatables\Http\Livewire\LivewireDatatable;
use Mediconesystems\LivewireDatatables\NumberColumn;

class Index extends LivewireDatatable
{/*
    public function render()
    {
        return view('livewire.student.index');
    }*/
//    public $model=Student::class;
    public $exportable = true;
    public $searchable = true;
    public $perPage = 30;

    public function builder()
    {
        return Student::query(); // TODO: Change the autogenerated stub
    }

    public function columns()
    {
        return [
            NumberColumn::name('id')
                ->label(__('property.id'))
                ->filterable()
                ->sortBy('id'),
            Column::name(
                'firstname')
                ->label(__('property.name'))
                ->filterable(),
            Column::name('lastname')
                ->label(__('property.lastname'))
                ->filterable(),
            Column::name('fathername')
                ->label(__('property.f_name'))
                ->filterable(),
            Column::name('grandfathername')
                ->label(__('property.g_name'))
                ->filterable(),
            NumberColumn::name('grade')
                ->label(__('property.grade'))
                ->filterable(),
            NumberColumn::name('user.email')
                ->label(__('property.email')),
        Column::callback(['id'], function ($id) {
            return view('component.btn', ['url' => \Illuminate\Support\Facades\URL::temporarySignedRoute('student.show',now()->addHours(1), [$id]),'name'=>__("page.show",['name'=>trans_choice('menu.student',1)])]);
        })->label(__("button.view"))->width(30),      ];
    }
}




